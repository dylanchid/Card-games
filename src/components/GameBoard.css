.game-board {
  position: relative;
  width: 100%;
  height: 100%;
  display: flex;
  align-items: center;
  justify-content: center;
  user-select: none;
}

.game-board .flex {
  display: flex;
  gap: 1rem;
  align-items: center;
  justify-content: center;
  width: 100%;
}

.game-board .loading {
  color: white;
  font-size: 1.5rem;
  text-align: center;
}

.card-stack {
  position: relative;
  width: var(--card-width);
  height: var(--card-height);
  border-radius: 8px;
  background: rgba(0, 0, 0, 0.2);
  display: flex;
  align-items: center;
  justify-content: center;
  transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
  border: 2px solid transparent;
}

.card-stack.deck {
  background: rgba(0, 0, 0, 0.4);
}

.card-stack.table {
  width: 100%;
  height: 100%;
  background: transparent;
  border: none;
}

.card-stack.hand {
  display: flex;
  flex-direction: row;
  gap: 0.5rem;
  background: transparent;
  border: none;
  min-width: 300px;
}

.card-stack.valid-drop {
  border-color: rgba(34, 197, 94, 0.5);
  background: rgba(34, 197, 94, 0.1);
  transform: scale(1.02);
  box-shadow: 0 0 15px rgba(34, 197, 94, 0.3);
}

.card-stack.invalid-drop {
  border-color: rgba(239, 68, 68, 0.5);
  background: rgba(239, 68, 68, 0.1);
  transform: scale(0.98);
  box-shadow: 0 0 15px rgba(239, 68, 68, 0.3);
}

/* Card being dragged */
.playing-card.dragging {
  opacity: 0.6;
  transform: scale(1.05);
  cursor: grabbing !important;
  pointer-events: none;
}

/* Card positioning */
.playing-card {
  position: absolute;
  width: var(--card-width);
  height: var(--card-height);
  transition: transform 0.3s ease, opacity 0.3s ease;
  cursor: grab;
  user-select: none;
  will-change: transform;
  transform-origin: center center;
}

.playing-card:active {
  cursor: grabbing;
}

/* Stack hover effects */
.card-stack:not(.disabled):not(.play-area):not(.deck-area):not(.playerHand-area):hover {
  background: rgba(255, 255, 255, 0.1);
  transform: translateY(-2px);
  transition: all 0.2s ease;
}

/* Loading state */
.loading {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  color: white;
  font-size: 1.5rem;
  text-align: center;
}

.loading-spinner {
  width: 40px;
  height: 40px;
  border: 4px solid rgba(255, 255, 255, 0.3);
  border-radius: 50%;
  border-top-color: white;
  animation: spin 1s linear infinite;
  margin-bottom: 1rem;
}

/* Error state */
.game-board-error {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  color: #ff4444;
  text-align: center;
  padding: 2rem;
}

.game-board-error h2 {
  font-size: 1.5rem;
  margin-bottom: 1rem;
}

.game-board-error button {
  margin-top: 1rem;
  padding: 0.5rem 1rem;
  background-color: #ff4444;
  color: white;
  border: none;
  border-radius: 4px;
  cursor: pointer;
  transition: background-color 0.2s;
}

.game-board-error button:hover {
  background-color: #ff6666;
}

/* Animations */
@keyframes spin {
  0% { transform: rotate(0deg); }
  100% { transform: rotate(360deg); }
}

/* Responsive design */
@media (max-width: 768px) {
  :root {
    --card-width: 80px;
    --card-height: 112px;
    --game-padding: 1rem;
  }
}

@media (max-width: 480px) {
  :root {
    --card-width: 60px;
    --card-height: 84px;
    --game-padding: 0.5rem;
  }
}

/* High contrast mode support */
@media (forced-colors: active) {
  .game-board {
    background: Canvas;
  }

  .game-board-error {
    background: Canvas;
    border: 2px solid CanvasText;
  }

  .game-board-error button {
    background: CanvasText;
    color: Canvas;
  }

  .game-board .card-stack.valid-drop {
    border: 2px solid CanvasText;
  }

  .game-board .card-stack.invalid-drop {
    border: 2px solid CanvasText;
    opacity: 0.7;
  }
}

/* Reduced motion support */
@media (prefers-reduced-motion: reduce) {
  .game-board .card-stack,
  .game-board-error button,
  .loading-spinner,
  .game-board-error {
    transition: none;
    animation: none;
  }

  .game-board .card-stack:hover:not(.disabled) {
    animation: none;
  }
}
